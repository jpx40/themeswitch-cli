//https://github.com/pest-parser/pest/blob/master/grammars/src/grammars/toml.pest

WHITESPACE = _{ " " | "\t" }

val   = @{ "\"" ~ char+ ~ "\"" }
value =  { (char+) }

cha = { ASCII_ALPHANUMERIC | ANY | "." | "_" | "/" }

// string = @{ "'" ~ ("''" | (!"'" ~ ANY))* ~ "'" }
// string = @{ ("'" ~ ("''" | (!"'" ~ ANY))* ~ "'") | ("\"" ~ ("\"\"" | (!"\"" ~ ANY))* ~ "\"") }
// 
// 

var = { "$" ~ cha+ }

string = ${ "\"" ~ inner ~ "\"" }
inner  = @{ char* }
char   =  {
    !("\"" | "\\") ~ ANY
  | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
  | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}
object =  {
    "{" ~ "}"
  | NEWLINE* ~ pair ~ NEWLINE* ~ ("," ~ NEWLINE* ~ pair ~ NEWLINE*)* ~ NEWLINE*
  | NEWLINE* ~ "{" ~ NEWLINE* ~ pair ~ NEWLINE* ~ ("," ~ NEWLINE* ~ pair ~ NEWLINE*)* ~ NEWLINE* ~ "}"
}

key  = ${ "\"" ~ inner ~ "\"" }
pair =  { key ~ ":" ~ string }

array = {
    "[" ~ "]"
  | "[" ~ string ~ ("," ~ string)* ~ "]"
}

COMMENT = _{ "#" ~ (!"\n" ~ ANY)* }

name = { "name" ~ "=" ~ string }

param = { "param" ~ "{" ~ (NEWLINE)* ~ (NEWLINE* ~ (path) ~ NEWLINE* | (NEWLINE* ~ object ~ NEWLINE*)) ~ "}" ~ NEWLINE* }

path = { "path" ~ "=" ~ string }

cmd = { ("cmd" ~ "=" ~ string) }


inline_table = { "{" ~ pair ~ ("," ~ pair)* ~ ","? ~ "}" | "{" ~ "}" }

array = { "[" ~ value ~ ("," ~ value)* ~ ","? ~ "]" | "[" ~ "]" }

identifier = { (ASCII_ALPHANUMERIC | "_" | "-")+ }

multi_line_string  = @{ "\"\"\"" ~ inner ~ "\"\"\"" }
string             = @{ "\"" ~ inner ~ "\"" }
inner              = @{ (!("\"" | "\\" | "\u{0000}" | "\u{001F}") ~ ANY)* ~ (escape ~ inner)? }
multi_line_literal = @{ "'''" ~ (!"'''" ~ ANY)* ~ "'''" }
literal            = @{ "'" ~ (!"'" ~ ANY)* ~ "'" }

escape  = @{ "\\" ~ ("b" | "t" | "n" | "f" | "r" | "\"" | "\\" | unicode | NEWLINE)? }
unicode = @{ "u" ~ ASCII_HEX_DIGIT{4} | "U" ~ ASCII_HEX_DIGIT{8} }


import_str = ${inner}

arg       = { "arg" ~ "=" ~ array }
import    = { "import "  ~ import_str ~ (NEWLINE)*}
wallpaper = { ("wallpaper" ~ "{" ~ (NEWLINE)* ~ (path | array) ~ (NEWLINE)* ~ "}") }
out       = { "output" ~ "=" ~ val }
script    = { "script" ~ "{" ~ (NEWLINE)* ~ (path ~ (NEWLINE)* | param ~ (NEWLINE)* | arg ~ (NEWLINE)*)+ ~ (NEWLINE)* ~ "}" }
exec      = { "exec" ~ "{" ~ (NEWLINE)* ~ (path ~ (NEWLINE)* | cmd ~ (NEWLINE)* | param ~ (NEWLINE)* | arg ~ (NEWLINE)*)+ ~ (NEWLINE)* ~ "}" }
template  = { "template" ~ "{" ~ (NEWLINE)* ~ (path ~ (NEWLINE)* | param ~ (NEWLINE)* | out ~ (NEWLINE)* | arg ~ (NEWLINE)* | color ~ NEWLINE*)+ ~ (NEWLINE)* ~ "}" }
color     = { "color" ~ "{" ~ (NEWLINE)* ~ (object | path) ~ (NEWLINE)* ~ "}" ~ (NEWLINE)* }
profile   = { "profile" ~ "{" ~ (NEWLINE)* ~ (name) ~ NEWLINE* ~ (script ~ NEWLINE* | wallpaper ~ (NEWLINE)* | color ~ NEWLINE* | exec ~ NEWLINE* | template ~ NEWLINE* | variable ~ NEWLINE*)+ ~ (NEWLINE)* ~ "}" }

variable = { (var ~ "=" ~ string) }

file = {
    SOI ~ (NEWLINE)* ~ (import ~ NEWLINE* | variable ~ NEWLINE* | profile ~ NEWLINE*)* ~ (NEWLINE)* ~ EOI
}
